/**
 * @function timeParser 时间解析器
 * @param time 要解析的时间
 * @param format 解析成字符串的格式
 * @return 时间戳或者时间文本
 * */
export const timeParser = <T extends string | number>(time: T, format?: string): T => {
    try {
        const timeDate = new Date(time)

        // 解析 time 为时间戳的情况
        if (typeof time === 'number') {
            const year = timeDate.getFullYear()
            const month = timeDate.getMonth() + 1
            const day = timeDate.getDate()
            const hour = timeDate.getHours()
            const minute = timeDate.getMinutes()
            const second = timeDate.getSeconds()

            const formatMap: Map<string, string> = new Map([
                [ 'YYYY', year + '' ],
                [ 'MM', `0${month}`.substr(-2) ],
                [ 'DD', `0${day}`.substr(-2) ],
                [ 'hh', `0${hour}`.substr(-2) ],
                [ 'mm', `0${minute}`.substr(-2) ],
                [ 'ss', `0${second}`.substr(-2) ],
            ])

            // 有字符串模板按照模板格式返回
            if (format && /(YYYY|MM|DD|hh|mm|ss)/.test(format)) {
                let formatStr = format

                formatMap.forEach((value, key) => {
                    formatStr = formatStr.replace(key, value)
                })
                return formatStr as T
            } else {
                // 默认返回的模板
                return `${year}-${formatMap.get('month')}-${formatMap.get('day')} ${formatMap.get('hour')}:${formatMap.get('minute')}` as T
            }
        } else {
            // 解析 time 为字符串的情况
            return +timeDate as T
        }
    } catch (e) {
        console.log(e)
        throw e
    }
}
